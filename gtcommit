#!/bin/bash

#. rabot-common
#if [ "$?" -ne "0" ]; then
#  echo "$0: Error while sourcing rabot-common" >&2
#  exit 1
#fi

. gt-utils
if [ "$?" -ne "0" ]; then
  echo "$0: Error while sourcing gt-utils" >&2
  exit 1
fi

checkForHelp $1

: << DOCSTRING
Usage: $(basename "$0") [-A] [MSG]

'$(basename "$0")' performs the following actions:

1   If the CWD is not under version control with git,
    this script will abort.

2.  Look for an executable file named 'precommit' in the
    Current Working Directory (CWD) and run it, if found.

3.  Run the script 'clean-this' in your CWD.

4.  If the option "-A" is passed, all files in the git working tree
    are updated to the index. Not recommended!

5.  The files are committed with commit message "MSG". If no
    argument is given, the commit message must be typed into
    a text editor that will open automatically.
DOCSTRING

# 1.
if ! isInGit; then
    exitWith 1 "Error: the current working directory ( '$PWD' ) is not under git version control."
fi


# 2.
cd $(getToplevel)
if [ -f "./precommit" ]; then
    . ./precommit
    exitOnError 1 "The script './precommit' returned an error."
fi


# 3.
clean-this
exitOnError 1 "The script 'clean-this' returned an error."


# 4.
addAll=false
commitMsg=

function handleOptionalArgument
{
    if [ -n "$1" ]; then

        if [ "$1" == "-A" ]; then
            addAll=true
        else
            commitMsg="$1"
        fi

    fi
}

handleOptionalArgument "$1"
handleOptionalArgument "$2"

if "$addAll"; then
    git add -A
    exitOnError 1 "'git add -A' returned an error."
fi


# 5.
if [ -n "$commitMsg" ]; then
    git commit -m "$commitMsg"
else
    git commit
fi
exitOnError 1 "'git commit' returned an error."
